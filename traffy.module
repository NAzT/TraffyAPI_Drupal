<?php
  function traffy_menu() {
    $items['traffy/test/%'] = array(
        'title' => 'Traffy API CCTV testing',
        'description' => 'Testing traffy CCTV api on drupal7',
        'page callback' => 'test_api',
        'page arguments' => array(2),
        'file' => 'traffy.test.inc',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $items['traffy/wrapper/%'] = array(
        'title' => 'Traffy api wrapper',
        'description' => 'Wrap them in!!',
        'page callback' => 'api_wrapper',
        'page arguments' => array(2),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $items['admin/traffy/settings'] = array(
        'title' => 'Traffy API configuration',
        'description' => 'Testing traffy api with drupal7',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('traffy_admin_settings'),
        'access arguments' => array('administer site configuration'),
        'file' => 'traffy.admin.inc',
        'menu_name' => 'traffy',
    );

    return $items;
  }

  function api_cache_get($api_to_call) {
    $ret = FALSE;
    $cache_info = get_cache_info($api_to_call);
    if ($cache_info) {
      if ($result = cache_get($cache_info['cid'])) {
        watchdog('traffy_cache', 'CACHE HIT :: '. $cache_info['cid']);
        $ret = $result->data;
      }
    }
    return $ret;
  }

  function api_cache_set($api_to_call, $data) {
    $cache_info = get_cache_info($api_to_call);
    //drupal_set_message('cache_set: '.$api_to_call);
    //drupal_set_message('cache_set: '.$data);
    cache_set($cache_info['cid'], $data, 'cache', $cache_info['expire']);
  }

  function request_traffy_api($url, $api_to_call, $CACHABLE = TRUE) {
    //drupal_set_message("REQUEST. ". $api_to_call. $url );
    $options = array(
      'headers' => get_http_headers(),
      'method' => 'POST',
      'data' => NULL,
      'max_redirects' => 3,
      'timeout' => 30.0,
      'context' => NULL,
    );

    $ret = '';
    $res = drupal_http_request($url, $options);
    if ($res->code != 200 ) {
      drupal_set_message(print_r($res, 1), 'error');
      drupal_set_message($res->error, 'error');
      $ret = 'error '. $res->code .': ' . $res->error;
    }
    else {
      $ret = $res->data;
      if ($CACHABLE && get_cache_info($api_to_call)) {
        api_cache_set($api_to_call, $ret);
        watchdog('traffy_cache', 'CACHE SET :: '. $api_to_call);
      }
    }
    return $ret;
  }

  function api_wrapper($api_to_call) {
    if (!allow_api($api_to_call)) {
      drupal_set_message($api_to_call . ' is not allowed.', 'error');
      return '';
    }

    $api_to_call = api_transform($api_to_call);
    $traffy  = get_api_info();
    $link_opts = array_merge(array('api' => $api_to_call), get_link_option());

    if (!isset($_GET['format'])) {
      $_GET['format'] = "JSON";
    }

    $format = $_GET['format'] = strtoupper($_GET['format']);

    foreach ($_GET as $key => $value) {
      if ($key != 'q' && $key != 'header') {
        $link_opts[$key] = $value;
      }
    }

    $url = url($traffy['service'], array('query' => $link_opts));


    //BADLY FIX drupal's url() problem
    $url = str_replace("%2C", ',', $url);

    $nocache = empty($_GET['nocache'])? FALSE: (($_GET['nocache']==1)? TRUE: FALSE);

    if ($nocache || $format == "JS") {
      drupal_add_http_header('Cache-Control', 'no-cache, must-revalidate', TRUE);
      watchdog('traffy_cache', 'FRESH CACHE:: '. $api_to_call);
      //NO NEED (TO SET CACHE)
      $ret = request_traffy_api($url, $api_to_call, FALSE);
    }
    else {
      drupal_add_http_header('Cache-Control', 'public');
      drupal_add_http_header('Cache-Control', 'max-age=300', TRUE);
      $cached = api_cache_get($api_to_call);
      if ($cached) {
        $ret = $cached;
        //watchdog('traffy_cache', 'CACHE HIT :: '. $api_to_call);
      }
      else {
        $ret = request_traffy_api($url, $api_to_call);
        watchdog('traffy_cache', 'CACHE EXPIRE OR NOT FOUND :: '. $api_to_call);
        drupal_set_message('traffy_cache'. 'CACHE EXPIRE OR NOT FOUND :: '. $api_to_call, 'warning');
      }
    }

    if (isset($_GET['header'])) {
      $header = $_GET['header'];
    }
    else {
      $header = 'html';
    }

    $arg_hdr = arg(3)? arg(3) : $header;

    if ($hdr_type = get_header_mapping($arg_hdr)) {
      drupal_add_http_header('Content-Type', $hdr_type);
    }

    print $ret;

  }

  function get_link_option() {
    $traffy  = get_api_info();
    $link_opts = array('appid' => $traffy['appid'],
                       'key' => $traffy['apikey'],
                      );
    if (!isset($_GET['format'])) {
      $_GET['format'] = "JSON";
    }

    foreach ($_GET as $key => $value) {
      if ($key != 'q' && $key != 'header') {
        $link_opts[$key] = $value;
      }
    }
    return $link_opts;
  }

  function get_api_info() {
    $api_service = variable_get('traffy_service_url', 'http://athena.traffy.in.th/apis/apitraffy.php');
    $apikey = variable_get('traffy_apikey', '');
    $appid= variable_get('traffy_appid', '');
    $traffy = array('service' => $api_service,
                 'apikey' => $apikey,
                 'appid' => $appid,
                );
    return $traffy;
  }

  function get_http_headers () {
    $host = $_SERVER['SERVER_NAME'];
    $headers = array(
        'Content-Type' => 'application/x-www-form-urlencoded; charset=utf-8',
        'Host' => $host,
        'Referer' => 'http://'.$host,
    );
    return $headers;
  }

  function allow_api($api) {
    $api = strtolower($api);
    //pessimistic strict usage!
    $allow_api = array('getcctv', 'getvms', 'getcctvimg', 'getvmsimg', 'getincident', 'getlinkallinfo', 'getrainforecast', 'gettrafficcongestion', 'getlinkinfo', 'gettraveltime');
    return in_array($api, $allow_api);
  }

  function get_header_mapping($type) {
    $type = strtolower($type);
    $map = array(
                  'img' => 'image/jpeg',
                  'image' => 'image/jpeg',
                  'png' => 'image/png',
                  'jpeg' => 'image/jpeg',
                  'gif' => 'image/gif',
                  'html' => 'text/html',
                  'xml' => 'text/xml',
                  'javascript' => 'application/javascript',
                  'js' => 'application/javascript',
                  'json' => 'application/json',
                );

    $mapping_status = FALSE;

    if (in_array($type, array_keys($map))) {
      $mapping_status = $map[$type];
    }
    return $mapping_status;
  }

  function api_transform($api) {
    $api = strtolower($api);
    $map = array( 'getcctvimg' => 'getcctvimg',
                  'getcctv' => 'getCCTV',
                  'getvms' => 'getVMS',
                  'getvmsimg' => 'getvmsimg',
                  'getincident' => 'getIncident',
                  'getlinkallinfo' => 'getLinkALLInfo',
                  'getrainforecast' => 'getRainForecast',
                  'gettrafficcongestion' => 'getCL',
                  'getlinkinfo' => 'getLinkInfo',
                  'gettraveltime' => 'getTravelTime',
                   //postAPI
                  'postgpsdata' => 'postGPSData',
                  'postincident' => 'postIncident',
                );
    //bad api
    //gettrafficcongestion $_GET['q'] Problem

    if (in_array($api, array_keys($map))) {
      $api = $map[$api];
    }
    return $api;
  }

  function get_cache_info($api_to_call) {
    $cache_uid = $_GET;

    $api_to_call = strtolower($api_to_call);
    $cache_uid['api'] = $api_to_call;

    unset($cache_uid['q']);
    unset($cache_uid['nocache']);
    unset($cache_uid['header']);

    if (empty($cache_uid['format'])) {
      $cache_uid['format'] = 'json';
    }

    $c_text = "";
    foreach ($cache_uid as $format => $value) {
      $c_text .= "_" . $format . "_" . $value;
    }

    $cid = 'traffy_'.$api_to_call . $c_text;
    $cachable = array(
                'getcctv' => array('cid' => $cid, 'type' => 'cache', 'expire' => 5*60),
                'getcctvimg' => array('cid' => $cid, 'type' => 'cache', 'expire' => 5*60),
                );
    $cache = FALSE;

    if (!empty($c_text) && in_array($api_to_call, array_keys($cachable))) {
      $cache = $cachable[$api_to_call];
    }

    return $cache;
  }